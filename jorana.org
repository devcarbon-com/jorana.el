* jorana.el - Reverse Literate setup using org-transclude.

jorana is an english approximation for the Hindi word meaning:
| 

** Rational:
There are downsides to the standard literate style config:
- colaboration
- need to have all code in file to tangle
- eventually with a big enough project, tangling gets a bit slow. 
- testing can be tricky

jorana.el is my attempt to remedy that a bit, useing the excellent org-transclusion package.

** workflow:

*** writing new code from org buffer
One of the neat things of literate programming is that you can structure your code the same way as you think about it. 

And it makes it straight-forward to remember how to set up the project, and writing a blog post of your work happens "for free".

Something I want to as quck asnd seamless as possible is adding new code and linking code from the narrative. 


#+transclude: [[file:jorana.el::<id:1672243297>][_defun_find_and_insert_transclusion______id_1672243297_]]  :src elisp :thing-at-point sexp

The magic happens mostly here:

#+transclude: [[file:jorana.el::<id:1672243830>][_defun_find_file_line_link___]]  :src elisp :thing-at-point sexp

#+RESULTS:
: find-file-line-link

*** jumping hither and yon



